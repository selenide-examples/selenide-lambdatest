apply plugin: 'java'
defaultTasks 'clean', 'test'

ext {
  selenideVersion = '7.9.3'
  junitVersion = '5.12.2'
  assertjVersion = '3.27.3'
  slf4jVersion = '2.0.17'
}

repositories{
  mavenCentral()
  mavenLocal()
  maven {
    url uri('https://oss.sonatype.org/content/repositories/snapshots/')
    mavenContent {
      snapshotsOnly()
    }
  }
}

dependencies {
  testImplementation "com.codeborne:selenide:$selenideVersion"
  testImplementation "com.codeborne:selenide-full-screenshot:$selenideVersion"

  testImplementation platform("org.junit:junit-bom:$junitVersion")
  testImplementation "org.junit.jupiter:junit-jupiter"
  testImplementation "org.junit.platform:junit-platform-engine"
  testImplementation "org.junit.platform:junit-platform-launcher"

  testImplementation "org.assertj:assertj-core:$assertjVersion"
  testImplementation "org.slf4j:slf4j-api:$slf4jVersion"
  testRuntimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"
}

configurations.configureEach {
  resolutionStrategy.cacheChangingModulesFor 30, 'seconds'
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
  options.debug = true
  sourceCompatibility = 17
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}


tasks.withType(Test).configureEach {
  useJUnitPlatform()
  systemProperties 'file.encoding': 'UTF-8'
  testLogging.showStandardStreams = true
  outputs.upToDateWhen {false}
}

tasks.register("chrome", Test) {
  systemProperties['selenide.browser'] = 'chrome'
}
tasks.register("firefox", Test) {
  systemProperties['selenide.browser'] = 'firefox'
}
tasks.register("edge", Test) {
  systemProperties['selenide.browser'] = 'edge'
}
